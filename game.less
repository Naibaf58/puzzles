/*! Puzzles-html stylesheet
 */

@import "bootstrap.less";

// Responsive breakpoints (wide, regular, narrow are matched to Bootstrap)

// Wide: Bootstrap "large desktops"
@responsiveWideMin:    1200px;

// Regular: Bootstrap default styles ("regular desktops")
@responsiveRegularMax: (@responsiveWideMin - 1px);
@responsiveRegularMin: 980px;

// Narrow: Bootstrap "tablets to regular desktops"
@responsiveNarrowMax:  (@responsiveRegularMin - 1px);
@responsiveNarrowMin:  768px;

// Small: phones in landscape orientation
@responsiveSmallMax:   (@responsiveNarrowMin - 1px);
@responsiveSmallMin:   481px;

// Tiny: phones in portrait orientation
@responsiveTinyMax:    (@responsiveSmallMin - 1px);



// Additional reset:

menu {
    padding: 0;
    margin: 0;
}

template {
    display: none;
}

// Style basic (semantic) elements:

button {
    .btn;
}


//
// Page Layout
//

.app {
    position: relative;
}

section, .game {
    margin: @baseLineHeight 0;
}

//
// Header
//

header {
    .page-header;

    h1 {
        display: inline-block;
        margin: 0 0.25em 0 0; // right margin for inline subtitle
    }

    .subtitle {
        display: inline-block;
        .muted;
    }
}

//
// Game
//

.game {
    .well;
    .well-small;
    padding: 5px; // don't need too much padding, as games tend to have their own
    text-align: center;
    display: inline-block;
}

#status {
    margin-bottom: 5px;
    min-height: @baseLineHeight; // else it shrinks when empty, causing lots of jumping
}

#gameboard {
    display: block;
    background-color: inherit;
    cursor: default;
    font-weight: bold;

    min-width: 200px;
    min-height: 200px;
}

.control select {
    width: 10em;
    margin-bottom: 0;
}

menu {
    @groupSpacing: 0.5em;

    margin: (-@groupSpacing);

    .buttongroup {
        display: inline-block;
        margin: @groupSpacing;
    }
}

.keyboard {
    button {
        .btn-large;
    }
}


//
// Messages
//

.message-backdrop {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    z-index: @zindexModalBackdrop;

    // background-color: rgba(0, 0, 0, 0.10);

    display: none;
    text-align: center;
}

.message {
    .alert;
    .alert-block;

    display: none; // will be inline-block when shown
    text-align: left;
    position: relative;
    top: 30%;
    z-index: @zindexModal;

    &.alert-info { .alert-info; }
    &.alert-success { .alert-success; }
    &.alert-danger { .alert-danger; }
}

//
// Index Page
//

body.index {
    @thumbSize: 75px;
    @tilePadding: (@gridGutterWidth/2);

    ul {
        margin: 0 (-@tilePadding);
        list-style: none;
        .clearfix();
    }
    li {
        display: inline-block;
        vertical-align: top;
        position: relative;

        .box-sizing(border-box);
        width: 24.75%; // Regular layout; see responsive overrides below
        min-height: (@thumbSize + 2*@tilePadding + 2px); // in case description short

        margin: (@baseLineHeight/2) -1px;
        line-height: @baseLineHeight;
        padding: @tilePadding @tilePadding @tilePadding (@tilePadding + @thumbSize + @tilePadding);

        border: 1px solid transparent;
        .border-radius(@baseBorderRadius);

        h3, h4 {
            margin-top: 0;
        }
        p {
            margin: 10px 0 0;
        }

        // Entire LI contents are wrapped in an A; make the LI behave like the A
        > a {
            display: block;
            color: inherit;
        }
        > a:hover {
            text-decoration: inherit;
        }
        h3, h4 {
            color: @linkColor;
        }
        &:hover {
            border-color: @linkColor;
            h3, h4 {
                color: @linkColorHover;
                text-decoration: underline;
            }
        }

        // Thumbnail images
        img {
            display: block;
            max-width: @thumbSize;
            position: absolute;
            top: @tilePadding;
            left: @tilePadding;
        }
    }

    // Responsive index layouts (regular = 4-up, above)
    @media (min-width: @responsiveWideMin) {
        li { width: 19.75%; } // wide = 5-up
    }
    @media (min-width: @responsiveNarrowMin) and (max-width: @responsiveNarrowMax) {
        li { width: 33%; } // narrow = 3-up
    }
    @media (min-width: @responsiveSmallMin) and (max-width: @responsiveSmallMax) {
        li { width: 49.5%; } // small = 2-up
    }
    @media (max-width: @responsiveTinyMax) {
        li { width: 100%; } // tiny = 1-up
    }
}



//
// DEBUGGING STUFF
//

.debug {
    //display: none;
    margin: (2 * @baseLineHeight) 0 0;
    padding-top: ((@baseLineHeight / 2) - 1);
    border-top: 1px solid @grayLight;
}

#memdebug {
}

#debug {
    white-space: pre-wrap;
    margin-top: @baseLineHeight;
}

.meter {
    display: inline-block;
    position: relative;
    width: 250px;
    height: @baseLineHeight;
    background-color: @grayLighter;
    vertical-align: bottom;
}
.meter .current, .meter .peak {
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    height: @baseLineHeight;
}
.meter .current {
    background-color: @successBorder;
}
.meter .peak {
    left: -1px;
    background-color: transparent;
    border-right: 2px solid @errorText;
}
.meter .maxLabel {
    position: absolute;
    right: 0;
    top: 0;
}
.meter .peakLabel {
    position: absolute;
    left: 0;
    top: 0;
}
